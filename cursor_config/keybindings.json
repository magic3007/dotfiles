// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+,",
    "command": "workbench.action.terminal.toggleTerminal",
  },
  {
    "key": "a", // 聚焦在资源管理器窗口的时候新建文件
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a", // 聚焦在资源管理器的时候新建文件夹
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  // 聚焦到侧边的资源管理器
  {
    "key": "ctrl+;",
    "command": "workbench.view.explorer", // `shift` + `command` + `e` 组合键对应的 命令ID（Command ID）
  },
  // 聚焦到编辑窗口
  {
    "key": "ctrl+'",
    "command": "workbench.action.focusFirstEditorGroup",
  },
  // 把 shift + 方向键映射为 vim 的窗口切换键
  {
    "key": "shift+left",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": ["<c-w>", "h"]
    }
  },
  {
    "key": "shift+right",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": ["<c-w>", "l"]
    }
  },
  {
    "key": "shift+up",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": ["<c-w>", "k"]
    }
  },
  {
    "key": "shift+down",
    "command": "vim.remap",
    "when": "vim.mode == 'Normal'",
    "args": {
      "after": ["<c-w>", "j"]
    }
  },
  // =================
  {
    "key": "ctrl+d",
    "command": "-editor.action.copyLinesDownAction"
  },
  {
    "key": "ctrl+enter",
    "command": "-editor.action.insertLineBefore",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+enter",
    "command": "-editor.action.insertLineAfter",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+enter",
    "command": "-language-julia.executeCell",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  },
  {
    "key": "ctrl+enter",
    "command": "-language-julia.executeCodeBlockOrSelection",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  },
  {
    "key": "ctrl+enter",
    "command": "language-julia.executeCodeBlockOrSelectionAndMove",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  },
  {
    "key": "shift+enter",
    "command": "-language-julia.executeCodeBlockOrSelectionAndMove",
    "when": "editorTextFocus && activeEditor != 'workbench.editor.notebook' && editorLangId in 'julia.supportedLanguageIds'"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.terminal.sendSequence",
    "args": { "text": "\u0012" },
    "when": "terminalFocus"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
  },
  // Toggle between terminal and editor focus
  {
    "key": "ctrl+`",
    "command": "workbench.action.terminal.focus"
  },
  {
    "key": "ctrl+`",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+b",
    "command": "-markdown.extension.editing.toggleBold",
    "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
  },
  {
    "key": "alt+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+j",
    "command": "list.focusDown",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "alt+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "alt+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "alt+k",
    "command": "list.focusUp",
    "when": "listFocus && !inputFocus"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  // switch tabs with `command + number`
  { "key": "cmd+[", "command": "workbench.action.previousEditor" },
  { "key": "cmd+]", "command": "workbench.action.nextEditor" },
  { "key": "cmd+1", "command": "workbench.action.openEditorAtIndex1" },
  { "key": "cmd+2", "command": "workbench.action.openEditorAtIndex2" },
  { "key": "cmd+3", "command": "workbench.action.openEditorAtIndex3" },
  { "key": "cmd+4", "command": "workbench.action.openEditorAtIndex4" },
  { "key": "cmd+5", "command": "workbench.action.openEditorAtIndex5" },
  { "key": "cmd+6", "command": "workbench.action.openEditorAtIndex6" },
  { "key": "cmd+7", "command": "workbench.action.openEditorAtIndex7" },
  { "key": "cmd+8", "command": "workbench.action.openEditorAtIndex8" },
  {
    "key": "cmd+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "shift+enter",
    "command": "-python.execInREPL",
    "when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'"
},
{
	"key": "space+;",
	"command": "vspacecode.space",
	"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
},
// Trigger vspacecode when sidebar is in focus
{
	"key": "space+;",
	"command": "vspacecode.space",
	"when": "sideBarFocus && !inputFocus && !whichkeyActive"
},
{
	"key": "tab",
	"command": "extension.vim_tab",
	"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
},
{
	"key": "tab",
	"command": "-extension.vim_tab",
	"when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
},
{
	"key": "x",
	"command": "magit.discard-at-point",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
},
{
	"key": "k",
	"command": "-magit.discard-at-point"
},
{
	"key": "-",
	"command": "magit.reverse-at-point",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
},
{
	"key": "v",
	"command": "-magit.reverse-at-point"
},
{
	"key": "shift+-",
	"command": "magit.reverting",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
},
{
	"key": "shift+v",
	"command": "-magit.reverting"
},
{
	"key": "shift+o",
	"command": "magit.resetting",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
},
{
	"key": "shift+x",
	"command": "-magit.resetting"
},
{
	"key": "x",
	"command": "-magit.reset-mixed"
},
{
	"key": "ctrl+u x",
	"command": "-magit.reset-hard"
},
{
	"key": "y",
	"command": "-magit.show-refs"
},
{
	"key": "y",
	"command": "vspacecode.showMagitRefMenu",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
},
{
	"key": "g",
	"command": "-magit.refresh",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
},
{
	"key": "g",
	"command": "vspacecode.showMagitRefreshMenu",
	"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
},
{
	"key": "ctrl+j",
	"command": "workbench.action.quickOpenSelectNext",
	"when": "inQuickOpen"
},
{
	"key": "ctrl+k",
	"command": "workbench.action.quickOpenSelectPrevious",
	"when": "inQuickOpen"
},
{
	"key": "ctrl+j",
	"command": "selectNextSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+k",
	"command": "selectPrevSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+l",
	"command": "acceptSelectedSuggestion",
	"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
{
	"key": "ctrl+j",
	"command": "showNextParameterHint",
	"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
},
{
	"key": "ctrl+k",
	"command": "showPrevParameterHint",
	"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
},
{
	"key": "ctrl+j",
	"command": "selectNextCodeAction",
	"when": "codeActionMenuVisible"
},
{
	"key": "ctrl+k",
	"command": "selectPrevCodeAction",
	"when": "codeActionMenuVisible"
},
{
	"key": "ctrl+l",
	"command": "acceptSelectedCodeAction",
	"when": "codeActionMenuVisible"
},
{
	"key": "ctrl+h",
	"command": "file-browser.stepOut",
	"when": "inFileBrowser"
},
{
	"key": "ctrl+l",
	"command": "file-browser.stepIn",
	"when": "inFileBrowser"
},
{
  "key": "cmd+e",
  "command": "composerMode.background"
},
{
  "key": "cmd+n",
  "command": "-workbench.action.files.newUntitledFile"
},
{
  "key": "cmd+n",
  "command": "workbench.action.createTerminalEditor"
}
]